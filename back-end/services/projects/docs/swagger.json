{
  "schemes": ["http"],
  "swagger": "2.0",
  "info": {
    "description": "Rest APIs to serve request related to project model/object.",
    "title": "Projects API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Upen Dhakal",
      "email": "dhakal.upenn@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0"
  },
  "host": "localhost:8082",
  "basePath": "/",
  "paths": {
    "/api/v1/schools": {
      "get": {
        "description": "Retrieve list of all the available schools.",
        "produces": ["application/json"],
        "tags": ["school"],
        "summary": "Get all schools.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entities.School"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/routes.ErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Adds a school in database.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["school"],
        "summary": "Create a school",
        "parameters": [
          {
            "description": "JSON object representing a school.",
            "name": "school",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dtos.SchoolCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entities.School"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/routes.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/v1/schools/{id}": {
      "get": {
        "description": "Retreive a school by its id. Id is unique for each school.",
        "produces": ["application/json"],
        "tags": ["school"],
        "summary": "Get single school",
        "parameters": [
          {
            "type": "integer",
            "description": "School ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entities.School"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/routes.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Removes a school by its id. Id is unique for each school.",
        "produces": ["application/json"],
        "tags": ["school"],
        "summary": "Delete a school",
        "parameters": [
          {
            "type": "integer",
            "description": "School ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entities.School"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/routes.ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "dtos.SchoolCreateRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "providence": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      }
    },
    "entities.School": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "providence": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      }
    },
    "routes.ErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  }
}
